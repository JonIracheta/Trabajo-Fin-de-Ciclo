// <auto-generated />
using System;
using ApiBackend.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiBackend.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231208162011_columnaTipoBool")]
    partial class columnaTipoBool
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ApiBackend.Entities.Equipo", b =>
                {
                    b.Property<int>("IdEquipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreEquipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdEquipo");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("ApiBackend.Entities.Panel", b =>
                {
                    b.Property<int>("IdPanel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEquipo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombrePanel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdPanel");

                    b.HasIndex("IdEquipo")
                        .IsUnique();

                    b.ToTable("Paneles");
                });

            modelBuilder.Entity("ApiBackend.Entities.Tarea", b =>
                {
                    b.Property<int>("IdTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EnDesarrollo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<int>("HorasEstimadas")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdPanel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreTarea")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("PorHacer")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("Resuelta")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoTarea")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdTarea");

                    b.HasIndex("IdPanel");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("ApiBackend.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdEquipo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdEquipo");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ApiBackend.Entities.Panel", b =>
                {
                    b.HasOne("ApiBackend.Entities.Equipo", "Equipo")
                        .WithOne("Panel")
                        .HasForeignKey("ApiBackend.Entities.Panel", "IdEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("ApiBackend.Entities.Tarea", b =>
                {
                    b.HasOne("ApiBackend.Entities.Panel", "Panel")
                        .WithMany("Tareas")
                        .HasForeignKey("IdPanel")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Panel");
                });

            modelBuilder.Entity("ApiBackend.Entities.Usuario", b =>
                {
                    b.HasOne("ApiBackend.Entities.Equipo", "Equipo")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEquipo")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Equipo");
                });

            modelBuilder.Entity("ApiBackend.Entities.Equipo", b =>
                {
                    b.Navigation("Panel")
                        .IsRequired();

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ApiBackend.Entities.Panel", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
